% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/main4_evalmods_m.R
\name{evalmods_m}
\alias{evalmods_m}
\title{Evaluate a single model with multiple datasets}
\usage{
evalmods_m(mdat, x_interval = 0.001, calc_avg = TRUE, ci_level = 0.95,
  scores = NULL, labels = NULL, modnames = NULL, dsids = NULL,
  na_worst = TRUE, ties_method = "equiv", levels = c("negative",
  "positive"))
}
\arguments{
\item{mdat}{An \code{mdat} object created by \code{\link{mmdata}}.
  The following arguments are ignored when \code{mdat} is specified.
  \itemize{
    \item \code{scores}
    \item \code{labels}
    \item \code{modnames}
    \item \code{dsids}
    \item \code{na_worst}
    \item \code{ties_method}
  }}

\item{x_interval}{A numeric value with the range (0, 1] to specifiy
  an interval of the evaluation values on the x-axis.
  No interpolation between two points is performed when it is set to 1.}

\item{scores}{A numeric data of predicted scores. It can be a vector,
  a matrix, an array, a data frame, or a list.}

\item{labels}{A numeric or factor data of observed labels.
  It can be a vector, a matrix, an array, a data frame, or a list.}

\item{modnames}{A character vector as the names
  of the models/classifiers.}

\item{dsids}{A numeric vector as dataset IDs.}

\item{na_worst}{A boolean value for controlling the treatment of NAs
  in the scores.
  \describe{
    \item{TRUE}{NAs are treated as the highest score}
    \item{FALSE}{NAs are treated as the lowest score}
  }}

\item{ties_method}{A string for controlling tied scores.
  Ignored if mdat is set.
  \describe{
    \item{"equiv"}{Ties are equivalently ranked}
    \item{"random"}{Ties are ranked in an incresing order as appeared}
    \item{"first"}{ Ties are ranked in random order}
  }}

\item{levels}{A character vector to overide the levels of the factor for
  the labels.}
}
\value{
The \code{evalmods_m} function returns an \code{smcurves} S3 object
  that contains ROC and Precision-Recall curves.
}
\description{
The \code{evalmods_m} function takes predicted scores and binary lables
  and calculates ROC and Precision-Recall curves.
}
\examples{
## Create sample datasets with 100 positives and 100 negatives
samps <- create_sim_samples(10, 100, 100, "all")
mdat <- mmdata(samps[["scores"]], samps[["labels"]],
               modnames = samps[["modnames"]],
               dsids = samps[["dsids"]])

## Generate an mscurve object
curves1 <- evalmods_m(mdat)

## Directly specifiy scores and labels
curves2 <- evalmods_m(scores = samps[["scores"]], labels = samps[["labels"]],
                      modnames = samps[["modnames"]],
                      dsids = samps[["dsids"]])

## Print the summary
curves2

## Plot Precision-Recall
plot(curves2, "PRC")

## Set x_interval = 0.1
curves3 <- evalmods_m(mdat, x_interval = 0.1)
plot(curves3, "PRC")

## No interpolation of Precsion-Recall curve
curves4 <- evalmods_m(mdat, x_interval = NULL)
plot(curves4, "PRC")
}
\seealso{
\code{\link{plot.smcurves}}, \code{\link{autoplot.smcurves}},
  and \code{\link{fortify.smcurves}} for plotting curves.
  \code{\link{join_scores}}, \code{\link{join_scores}},
  and \code{\link{join_labels}} for formatting input data.
}

